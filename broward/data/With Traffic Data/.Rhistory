knitr::opts_chunk$set(warning=F, message=F,echo = TRUE)
knitr::opts_knit$set(root.dir = '/tmp')
library(tidyverse)
library(magrittr)
library(ROCR)
library(caret)
data_path = "C:/Users/binha/Documents/Duke/Cynthia Research/KY-analysis-mytrials/broward/data/"
load(paste0(data_path, "compas_psa.Rdata"))
load(paste0(data_path, "expanded_features_with_traffic_offense.Rdata"))
labels = read_csv("~/Duke/Cynthia Research/KY-analysis-mytrials/broward/data/labels.csv") %>%
mutate(screening_date = as.Date(screening_date, format = "%m/%d/%Y"))
data_path = "C:/Users/binha/Documents/Duke/Cynthia Research/KY-analysis-mytrials/broward/data/"
load(paste0(data_path, "compas_psa.Rdata"))
load(paste0(data_path, "expanded_features_with_traffic_offense.Rdata"))
labels = read_csv("~/Duke/Cynthia Research/KY-analysis-mytrials/broward/data/labels_with_traffic_offense.csv") %>%
mutate(screening_date = as.Date(screening_date, format = "%m/%d/%Y"))
### Add useful columns to features and apply row filters used for all models
features_filt = features_before_on %>%
inner_join(
data_before %>%
select(person_id, screening_date, people) %>%
unnest() %>%
select(person_id, screening_date, race, sex, name),
by = c("person_id","screening_date")
) %>%
mutate(sex = ifelse(sex == "Male", 0, 1)) %>% #change sex variable to numeric encoding
inner_join(features_on, by = c("person_id","screening_date")) %>%
inner_join(
psa_features%>%
select(-c(p_current_age, p_prison)), by = c("person_id","screening_date")) %>%
inner_join(outcomes, by = c("person_id","screening_date")) %>%
inner_join(
features %>%
select(person_id, screening_date, one_year, three_year, five_year),
by = c("person_id", "screening_date")) %>%
filter(`Risk of Recidivism_decile_score` != -1, `Risk of Violence_decile_score` != -1) %>% # Filter 1
filter(!is.na(current_offense_date)) %>% # Filter 3
filter(screening_date <= current_offense_date_limit) %>% # Filter 4
mutate(recid_use = as.factor(recid), # Select recidivism or violent recidivism to use in this script
decile_use = `Risk of Recidivism_decile_score`) # Select recidivism or violent recidivism decile score to use in this script
## Select features
df = features_filt %>%
transmute(
person_id,
sex,
screening_date,
#COMPAS Risk of Recidivism Features\
p_current_age,
p_age_first_offense,
p_charge,
p_jail30 = p_jail30,
p_prison = p_prison,
p_probation = p_probation,
#COMPAS Risk of violent recidivism features
p_juv_fel_count,
p_felprop_violarrest,
p_murder_arrest,
p_felassault_arrest,
p_misdemassault_arrest,
p_famviol_arrest,
p_sex_arrest,
p_weapons_arrest,
#PSA Features (which were not named above)
fail_appear_two_yr,
fail_appear_two_plus,
current_violent,
current_violent20,
pending_charge,
prior_conviction_F,
prior_conviction_M,
violent_conviction,
total_convictions,
#Misc Features
p_arrest,
p_property,
p_traffic,
p_drug,
p_dui,
p_domestic,
p_stalking,
p_voyeurism,
p_fraud,
p_stealing,
p_trespass,
one_year,
three_year,
five_year,
recid_use) %>%
na.omit()
set.seed(283)
train = sample_frac(df,.8)
test = anti_join(df, train, by = 'person_id')
train = merge(x=train, y=labels, by=c('person_id', 'screening_date')) %>%
select(person_id:recid_use, recid_drug, recid_property, recid_traffic, recid_M, recid_F, recid_violent)
test = merge(x=test, y=labels, by=c('person_id', 'screening_date')) %>%
select(person_id:recid_use, recid_drug, recid_property, recid_traffic, recid_M, recid_F, recid_violent)
labels = c("recid_use", "recid_drug", "recid_property",
"recid_traffic", "recid_M", "recid_F", "recid_violent")
for (i in labels){
subtrain = train %>% select(person_id:five_year, i)
subtest = test %>% select(person_id:five_year, i)
write.csv(subtrain, file = paste0("train_", i, "_with_traffic_offense", ".csv"), row.names = F)
write.csv(subtest, file = paste0("test_", i, "_with_traffic_offense", ".csv"), row.names = F)
}
knitr::opts_chunk$set(warning=F, message=F,echo = TRUE)
knitr::opts_knit$set(root.dir = '/tmp')
library(tidyverse)
library(magrittr)
library(ROCR)
library(caret)
data_path = "C:/Users/binha/Documents/Duke/Cynthia Research/KY-analysis-mytrials/broward/data/"
load(paste0(data_path, "compas_psa.Rdata"))
load(paste0(data_path, "expanded_features_traffic_offenses.Rdata"))
labels = read_csv("~/Duke/Cynthia Research/KY-analysis-mytrials/broward/data/labels_traffic_offenses.csv") %>%
mutate(screening_date = as.Date(screening_date, format = "%m/%d/%Y"))
### Add useful columns to features and apply row filters used for all models
features_filt = features_before_on %>%
inner_join(
data_before %>%
select(person_id, screening_date, people) %>%
unnest() %>%
select(person_id, screening_date, race, sex, name),
by = c("person_id","screening_date")
) %>%
mutate(sex = ifelse(sex == "Male", 0, 1)) %>% #change sex variable to numeric encoding
inner_join(features_on, by = c("person_id","screening_date")) %>%
inner_join(
psa_features%>%
select(-c(p_current_age, p_prison)), by = c("person_id","screening_date")) %>%
inner_join(outcomes, by = c("person_id","screening_date")) %>%
inner_join(
features %>%
select(person_id, screening_date, one_year, three_year, five_year),
by = c("person_id", "screening_date")) %>%
filter(`Risk of Recidivism_decile_score` != -1, `Risk of Violence_decile_score` != -1) %>% # Filter 1
filter(!is.na(current_offense_date)) %>% # Filter 3
filter(screening_date <= current_offense_date_limit) %>% # Filter 4
mutate(recid_use = as.factor(recid), # Select recidivism or violent recidivism to use in this script
decile_use = `Risk of Recidivism_decile_score`) # Select recidivism or violent recidivism decile score to use in this script
## Select features
df = features_filt %>%
transmute(
person_id,
sex,
screening_date,
#COMPAS Risk of Recidivism Features\
p_current_age,
p_age_first_offense,
p_charge,
p_jail30 = p_jail30,
p_prison = p_prison,
p_probation = p_probation,
#COMPAS Risk of violent recidivism features
p_juv_fel_count,
p_felprop_violarrest,
p_murder_arrest,
p_felassault_arrest,
p_misdemassault_arrest,
p_famviol_arrest,
p_sex_arrest,
p_weapons_arrest,
#PSA Features (which were not named above)
fail_appear_two_yr,
fail_appear_two_plus,
current_violent,
current_violent20,
pending_charge,
prior_conviction_F,
prior_conviction_M,
violent_conviction,
total_convictions,
#Misc Features
p_arrest,
p_property,
p_traffic,
p_drug,
p_dui,
p_domestic,
p_stalking,
p_voyeurism,
p_fraud,
p_stealing,
p_trespass,
one_year,
three_year,
five_year,
recid_use) %>%
na.omit()
set.seed(283)
train = sample_frac(df,.8)
test = anti_join(df, train, by = 'person_id')
View(train)
train = merge(x=train, y=labels, by=c('person_id', 'screening_date')) %>%
select(person_id:recid_use)
View(train)
test = merge(x=test, y=labels, by=c('person_id', 'screening_date')) %>%
select(person_id:recid_use)
knitr::opts_chunk$set(warning=F, message=F,echo = TRUE)
knitr::opts_knit$set(root.dir = '/tmp')
library(tidyverse)
library(magrittr)
library(ROCR)
library(caret)
data_path = "C:/Users/binha/Documents/Duke/Cynthia Research/KY-analysis-mytrials/broward/data/"
load(paste0(data_path, "compas_psa.Rdata"))
load(paste0(data_path, "expanded_features_traffic_offenses.Rdata"))
labels = read_csv("~/Duke/Cynthia Research/KY-analysis-mytrials/broward/data/labels_traffic_offenses.csv") %>%
mutate(screening_date = as.Date(screening_date, format = "%m/%d/%Y"))
### Add useful columns to features and apply row filters used for all models
features_filt = features_before_on %>%
inner_join(
data_before %>%
select(person_id, screening_date, people) %>%
unnest() %>%
select(person_id, screening_date, race, sex, name),
by = c("person_id","screening_date")
) %>%
mutate(sex = ifelse(sex == "Male", 0, 1)) %>% #change sex variable to numeric encoding
inner_join(features_on, by = c("person_id","screening_date")) %>%
inner_join(
psa_features%>%
select(-c(p_current_age, p_prison)), by = c("person_id","screening_date")) %>%
inner_join(outcomes, by = c("person_id","screening_date")) %>%
inner_join(
features %>%
select(person_id, screening_date, one_year, three_year, five_year),
by = c("person_id", "screening_date")) %>%
filter(`Risk of Recidivism_decile_score` != -1, `Risk of Violence_decile_score` != -1) %>% # Filter 1
filter(!is.na(current_offense_date)) %>% # Filter 3
filter(screening_date <= current_offense_date_limit) %>% # Filter 4
mutate(recid_use = as.factor(recid), # Select recidivism or violent recidivism to use in this script
decile_use = `Risk of Recidivism_decile_score`) # Select recidivism or violent recidivism decile score to use in this script
## Select features
df = features_filt %>%
transmute(
person_id,
sex,
screening_date,
#COMPAS Risk of Recidivism Features\
p_current_age,
p_age_first_offense,
p_charge,
p_jail30 = p_jail30,
p_prison = p_prison,
p_probation = p_probation,
#COMPAS Risk of violent recidivism features
p_juv_fel_count,
p_felprop_violarrest,
p_murder_arrest,
p_felassault_arrest,
p_misdemassault_arrest,
p_famviol_arrest,
p_sex_arrest,
p_weapons_arrest,
#PSA Features (which were not named above)
fail_appear_two_yr,
fail_appear_two_plus,
current_violent,
current_violent20,
pending_charge,
prior_conviction_F,
prior_conviction_M,
violent_conviction,
total_convictions,
#Misc Features
p_arrest,
p_property,
p_traffic,
p_drug,
p_dui,
p_domestic,
p_stalking,
p_voyeurism,
p_fraud,
p_stealing,
p_trespass,
one_year,
three_year,
five_year,
recid_use) %>%
na.omit()
set.seed(283)
train = sample_frac(df,.8)
test = anti_join(df, train, by = 'person_id')
View(labels)
View(train)
View(labels)
train = merge(x=train, y=labels, by=c('person_id', 'screening_date')) %>%
select(person_id:recid_use, recid)
View(train)
mean(train$recid == train$recid_use)
knitr::opts_chunk$set(warning=F, message=F,echo = TRUE)
knitr::opts_knit$set(root.dir = '/tmp')
library(tidyverse)
library(magrittr)
library(ROCR)
library(caret)
data_path = "C:/Users/binha/Documents/Duke/Cynthia Research/KY-analysis-mytrials/broward/data/"
load(paste0(data_path, "compas_psa.Rdata"))
load(paste0(data_path, "expanded_features_traffic_offenses.Rdata"))
labels = read_csv("~/Duke/Cynthia Research/KY-analysis-mytrials/broward/data/labels_traffic_offenses.csv") %>%
mutate(screening_date = as.Date(screening_date, format = "%m/%d/%Y"))
### Add useful columns to features and apply row filters used for all models
features_filt = features_before_on %>%
inner_join(
data_before %>%
select(person_id, screening_date, people) %>%
unnest() %>%
select(person_id, screening_date, race, sex, name),
by = c("person_id","screening_date")
) %>%
mutate(sex = ifelse(sex == "Male", 0, 1)) %>% #change sex variable to numeric encoding
inner_join(features_on, by = c("person_id","screening_date")) %>%
inner_join(
psa_features%>%
select(-c(p_current_age, p_prison)), by = c("person_id","screening_date")) %>%
inner_join(outcomes, by = c("person_id","screening_date")) %>%
inner_join(
features %>%
select(person_id, screening_date, one_year, three_year, five_year),
by = c("person_id", "screening_date")) %>%
filter(`Risk of Recidivism_decile_score` != -1, `Risk of Violence_decile_score` != -1) %>% # Filter 1
filter(!is.na(current_offense_date)) %>% # Filter 3
filter(screening_date <= current_offense_date_limit) %>% # Filter 4
mutate(recid_use = as.factor(recid), # Select recidivism or violent recidivism to use in this script
decile_use = `Risk of Recidivism_decile_score`) # Select recidivism or violent recidivism decile score to use in this script
## Select features
df = features_filt %>%
transmute(
person_id,
sex,
screening_date,
#COMPAS Risk of Recidivism Features\
p_current_age,
p_age_first_offense,
p_charge,
p_jail30 = p_jail30,
p_prison = p_prison,
p_probation = p_probation,
#COMPAS Risk of violent recidivism features
p_juv_fel_count,
p_felprop_violarrest,
p_murder_arrest,
p_felassault_arrest,
p_misdemassault_arrest,
p_famviol_arrest,
p_sex_arrest,
p_weapons_arrest,
#PSA Features (which were not named above)
fail_appear_two_yr,
fail_appear_two_plus,
current_violent,
current_violent20,
pending_charge,
prior_conviction_F,
prior_conviction_M,
violent_conviction,
total_convictions,
#Misc Features
p_arrest,
p_property,
p_traffic,
p_drug,
p_dui,
p_domestic,
p_stalking,
p_voyeurism,
p_fraud,
p_stealing,
p_trespass,
one_year,
three_year,
five_year,
recid_use) %>%
na.omit()
set.seed(283)
train = sample_frac(df,.8)
test = anti_join(df, train, by = 'person_id')
write.csv(train, file = paste0("train_recid_use_with_traffic_offense", ".csv"), row.names = F)
write.csv(test, file = paste0("test_recid_use_with_traffic_offense", ".csv"), row.names = F)
knitr::opts_chunk$set(warning=F, message=F,echo = TRUE)
knitr::opts_knit$set(root.dir = '/tmp')
library(tidyverse)
library(magrittr)
library(ROCR)
library(caret)
data_path = "C:/Users/binha/Documents/Duke/Cynthia Research/KY-analysis-mytrials/broward/data/"
load(paste0(data_path, "compas_psa.Rdata"))
load(paste0(data_path, "expanded_features_traffic_offenses.Rdata"))
labels = read_csv("~/Duke/Cynthia Research/KY-analysis-mytrials/broward/data/labels_traffic_offenses.csv") %>%
mutate(screening_date = as.Date(screening_date, format = "%m/%d/%Y"))
### Add useful columns to features and apply row filters used for all models
features_filt = features_before_on %>%
inner_join(
data_before %>%
select(person_id, screening_date, people) %>%
unnest() %>%
select(person_id, screening_date, race, sex, name),
by = c("person_id","screening_date")
) %>%
mutate(sex = ifelse(sex == "Male", 0, 1)) %>% #change sex variable to numeric encoding
inner_join(features_on, by = c("person_id","screening_date")) %>%
inner_join(
psa_features%>%
select(-c(p_current_age, p_prison)), by = c("person_id","screening_date")) %>%
inner_join(outcomes, by = c("person_id","screening_date")) %>%
inner_join(
features %>%
select(person_id, screening_date, one_year, three_year, five_year),
by = c("person_id", "screening_date")) %>%
filter(`Risk of Recidivism_decile_score` != -1, `Risk of Violence_decile_score` != -1) %>% # Filter 1
filter(!is.na(current_offense_date)) %>% # Filter 3
filter(screening_date <= current_offense_date_limit) %>% # Filter 4
mutate(recid_use = as.factor(recid), # Select recidivism or violent recidivism to use in this script
decile_use = `Risk of Recidivism_decile_score`) # Select recidivism or violent recidivism decile score to use in this script
## Select features
df = features_filt %>%
transmute(
person_id,
sex,
screening_date,
#COMPAS Risk of Recidivism Features\
p_current_age,
p_age_first_offense,
p_charge,
p_jail30 = p_jail30,
p_prison = p_prison,
p_probation = p_probation,
#COMPAS Risk of violent recidivism features
p_juv_fel_count,
p_felprop_violarrest,
p_murder_arrest,
p_felassault_arrest,
p_misdemassault_arrest,
p_famviol_arrest,
p_sex_arrest,
p_weapons_arrest,
#PSA Features (which were not named above)
fail_appear_two_yr,
fail_appear_two_plus,
current_violent,
current_violent20,
pending_charge,
prior_conviction_F,
prior_conviction_M,
violent_conviction,
total_convictions,
#Misc Features
p_arrest,
p_property,
p_traffic,
p_drug,
p_dui,
p_domestic,
p_stalking,
p_voyeurism,
p_fraud,
p_stealing,
p_trespass,
one_year,
three_year,
five_year,
recid_use) %>%
na.omit()
set.seed(283)
train = sample_frac(df,.8)
test = anti_join(df, train, by = 'person_id')
a = merge(x=train, y =labels, by=c("person_id", "screening_date")) %>%
select(person_id:recid_use, recid_drug, recid_property)
View(a)
mean(a$recid_property)
sum(a$recid_property)
sum(a$recid_drug)
