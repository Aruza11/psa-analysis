str_detect(UOR_Description, "GUN") |
str_detect(UOR_Description, "FIREARM") |
UOR_Code %in% c(seq(15010, 15065), seq(90701, 90705)), 1, 0),
is_fel_prop_viol = ifelse(is_felony == 1 & is_property == 1 & is_violence == 1, 1, 0),
is_fel_assult = ifelse(is_felony == 1 & is_assault==1, 1, 0),
is_misde_assult = ifelse(is_misdemeanor == 1 & is_assault==1, 1, 0),
is_traffic = ifelse(str_detect(UOR_Description, "TRAFFIC") |
UOR_Code %in% c(seq(10,1460), seq(1500, 4325),
seq(4380, 4405), seq(4420, 7295)) , 1,0),
is_drug = ifelse(str_detect(UOR_Description, "DRUG") |
UOR_Code %in% c(seq(18020,18915), seq(48000, 48005),
seq(418060, 418216), seq(419900, 419995),
seq(420090,420095),
seq(421010, 421166), seq(421310, 421626)), 1, 0),
is_dui = ifelse(str_detect(UOR_Description, "DUI") |
UOR_Code %in% c(seq(1470,1495), seq(26190, 26205),
seq(26281, 26295)), 1, 0),
is_stalking = ifelse(str_detect(UOR_Description, "STALKING") |
UOR_Code %in% seq(27640, 27645), 1, 0),
is_voyeurism = ifelse(str_detect(UOR_Description, "VOYEURISM") |
UOR_Code %in% seq(17300, 17405), 1, 0),
is_fraud = ifelse(str_detect(UOR_Description, "FRAUD") |
UOR_Code %in% seq(16650, 16655), 1, 0),
is_stealing = ifelse(str_detect(UOR_Description, "THEFT") |
str_detect(UOR_Description, "ROBBERY") |
UOR_Code %in% seq(120000, 122025), 1, 0),
is_trespass = ifelse(str_detect(UOR_Description, "TRESPASS") |
UOR_Code %in% seq(26160, 26175), 1, 0),
## prison / jail sentence information
jail = ifelse(is.na(sentence), 0, ifelse(sentence == "Jail Time", 1, 0)),
prison = ifelse(is.na(sentence), 0, ifelse(sentence == "Prison Time", 1, 0)),
jail30 = ifelse(jail == 1 & SentMonths >= 1, 1, 0),
SentMonths = ifelse(jail == 1 | prison == 1, SentMonths, 0),
SuspSentMonths = ifelse(is.na(SuspSentMonths), 0, SuspSentMonths),
ADE = ifelse(is.na(ADE), 0, ifelse(ADE == 1, 1, 0)),
Treatment = ifelse(is.na(Undergo_Treat),0, ifelse(Undergo_Treat == 1, 1, 0))
) %>% ## further get rid of redundant variables
select(-c(UOR_Description, UOR_Level, UOR_Code, sentence, Undergo_Treat, jail)) %>%
filter(!is.na(SentMonths)) ## person_id = 73272, seq_case_id = 2674931: even "prison" ==
## 1,SentMonth is still 0. Therefore, need to be removed.
summary(CNet_features)
cols = colnames(CNet_features)
for (i in 12:30){
print(i)
column = cols[i]
values = CNet_features[,c(1,2,11,i)] %>%
.[.[,4] == 1, ] %>%
filter(Age_at_CNet_Case_Filing <= 70,
Age_at_CNet_Case_Filing >= 18) %>%
group_by(person_id, seq_case_id) %>%
summarise(age = max(Age_at_CNet_Case_Filing)) %>%
group_by(age) %>%
summarise(count = n())
plot = ggplot(data = values, aes(x=age,y=count)) + geom_bar(stat = "identity") +
xlab("age") +
ylab("count") +
ggtitle(column)
print(plot)
}
PRIM_features0 = PRIM_cases %>% select(person_id, seq_case_id, CaseID, Interview_Date_Created,
Case_Date_Booked, Age_at_Case_Booked,
OnProbation, SupProbation, Fta,
fta_risk_score_raw, nca_risk_score_raw,
pvf_risk_score_raw,
## risk score factors
RA2_Current_Charge_Violent,
RA2_Violent_and_under_21,
RA2_Age_At_Interview,
RA2_New_Charge_While_Case_Pending,
RA2_Has_Prior_Misdemeanor,
RA2_Has_Prior_Felony,
RA2_How_Many_FTA_Last_2_Yrs,
RA2_Has_Any_FTA_Older_2_Yrs,
RA2_Num_Prior_Violent,
RA2_Has_Prior_Incarceration) %>%
mutate(FTA = ifelse(Fta == "Y", 1, 0),
probation = ifelse(OnProbation == "Y"|SupProbation == "Y", 1, 0),
Interview_Date = as.Date(Interview_Date_Created),
PRIM_Case_Filing_Date = as.Date(Case_Date_Booked),
Age_at_PRIM_Case_Filing = Age_at_Case_Booked,
fta_risk_score_raw = ifelse(fta_risk_score_raw == "NULL", NA, fta_risk_score_raw),
nca_risk_score_raw = ifelse(nca_risk_score_raw == "NULL", NA, nca_risk_score_raw),
pvf_risk_score_raw = ifelse(pvf_risk_score_raw == "NULL", NA, pvf_risk_score_raw)) %>%
filter(Interview_Date >= "2013-07-01") %>%
select(-c(Fta,OnProbation, SupProbation, Case_Date_Booked,
Age_at_Case_Booked, Interview_Date_Created))
summary(PRIM_features0)
PRIM_features0 %>% group_by(person_id, seq_case_id) %>% summarise(count = n ()) %>% arrange(desc(count))
FTA_table = PRIM_features0 %>%
mutate(RA2_Has_Prior_Conviction =
ifelse(RA2_Has_Prior_Misdemeanor=="2" & RA2_Has_Prior_Felony == "2", 0,   ## "2": No
ifelse(RA2_Has_Prior_Misdemeanor == "1" |  RA2_Has_Prior_Felony=="1", 1, NA)),
RA2_New_Charge_While_Case_Pending = ifelse(RA2_New_Charge_While_Case_Pending == "1", 1,
ifelse(RA2_New_Charge_While_Case_Pending == "2", 0, NA)),
RA2_How_Many_FTA_Last_2_Yrs = ifelse(RA2_How_Many_FTA_Last_2_Yrs == "1", 0,
ifelse(RA2_How_Many_FTA_Last_2_Yrs == "2", 2,
ifelse(RA2_How_Many_FTA_Last_2_Yrs == "3", 4, NA))),
RA2_Has_Any_FTA_Older_2_Yrs = ifelse(RA2_Has_Any_FTA_Older_2_Yrs == "1", 1,
ifelse(RA2_Has_Any_FTA_Older_2_Yrs == "2", 0, NA))) %>%
select(RA2_New_Charge_While_Case_Pending,
RA2_Has_Prior_Conviction,
RA2_How_Many_FTA_Last_2_Yrs,
RA2_Has_Any_FTA_Older_2_Yrs)
### Calculate Scores
FTA_table$Score = apply(FTA_table, 1, sum)
### Pick NCA Features
NCA_table = PRIM_features0 %>%
mutate(RA2_Age_At_Interview = ifelse(RA2_Age_At_Interview == "3", 0,
ifelse(RA2_Age_At_Interview == "NULL", NA, 2)),
RA2_New_Charge_While_Case_Pending = ifelse(RA2_New_Charge_While_Case_Pending == "1", 3,
ifelse(RA2_New_Charge_While_Case_Pending == "2", 0, NA)),
RA2_Has_Prior_Misdemeanor = ifelse(RA2_Has_Prior_Misdemeanor == "1", 1,
ifelse(RA2_Has_Prior_Misdemeanor == "2", 0, NA)),
RA2_Has_Prior_Felony = ifelse(RA2_Has_Prior_Felony == "1", 1,
ifelse(RA2_Has_Prior_Felony == "2", 0, NA)),
RA2_Num_Prior_Violent = ifelse(RA2_Num_Prior_Violent == "1", 0,
ifelse(RA2_Num_Prior_Violent == "2", 1,
ifelse(RA2_Num_Prior_Violent == "3", 2, NA))),
RA2_How_Many_FTA_Last_2_Yrs = ifelse(RA2_How_Many_FTA_Last_2_Yrs == "1", 0,
ifelse(RA2_How_Many_FTA_Last_2_Yrs == "2", 1,
ifelse(RA2_How_Many_FTA_Last_2_Yrs == "3", 2, NA))),
RA2_Has_Prior_Incarceration = ifelse(RA2_Has_Prior_Incarceration == "1", 2,
ifelse(RA2_Has_Prior_Incarceration == "2", 0, NA))) %>%
select(RA2_Age_At_Interview, RA2_New_Charge_While_Case_Pending, RA2_Has_Prior_Felony,
RA2_Has_Prior_Misdemeanor, RA2_Num_Prior_Violent, RA2_How_Many_FTA_Last_2_Yrs,
RA2_Has_Prior_Incarceration)
## Calculate unweighted Score
NCA_table$Score = apply(NCA_table, 1, sum)
### pick up NVCA features
PVF_table = PRIM_features0 %>%
mutate(RA2_Current_Charge_Violent = ifelse(RA2_Current_Charge_Violent == "2", 0,
ifelse(RA2_Current_Charge_Violent == "1", 2, NA)),
RA2_Violent_and_under_21 = ifelse(RA2_Violent_and_under_21 == "2", 0,
ifelse(RA2_Violent_and_under_21 == "1", 1, NA)),
RA2_New_Charge_While_Case_Pending = ifelse(RA2_New_Charge_While_Case_Pending == "2", 0,
ifelse(RA2_New_Charge_While_Case_Pending == "1",1, NA)),
RA2_Has_Prior_Conviction =
ifelse(RA2_Has_Prior_Misdemeanor=="2" & RA2_Has_Prior_Felony == "2", 0,
ifelse(RA2_Has_Prior_Misdemeanor == "1" | RA2_Has_Prior_Felony=="1", 1, NA)),
RA2_Num_Prior_Violent = ifelse(RA2_Num_Prior_Violent == "1", 0,
ifelse(RA2_Num_Prior_Violent == "2", 1,
ifelse(RA2_Num_Prior_Violent == "3", 2, NA)))) %>%
select(RA2_Current_Charge_Violent,
RA2_Violent_and_under_21,
RA2_New_Charge_While_Case_Pending,
RA2_Has_Prior_Conviction,
RA2_Num_Prior_Violent)
## NVCA unweighted score
PVF_table$Score = apply(PVF_table, 1, sum)
PRIM_features = PRIM_features0 %>%
select(person_id, seq_case_id, CaseID,
Interview_Date,
FTA, probation,
RA2_New_Charge_While_Case_Pending,
RA2_Current_Charge_Violent,
PRIM_Case_Filing_Date,
Age_at_PRIM_Case_Filing,
fta_risk_score_raw,
nca_risk_score_raw,
pvf_risk_score_raw) %>%
mutate(pending_charge = ifelse(RA2_New_Charge_While_Case_Pending == "2", 0, 1),
is_violence_prim = ifelse(RA2_Current_Charge_Violent == "2", 0, 1),
fta_risk_score_raw = as.numeric(fta_risk_score_raw),
nca_risk_score_raw = as.numeric(nca_risk_score_raw),
pvf_risk_score_raw = as.numeric(pvf_risk_score_raw),
fta_calc = FTA_table$Score,
nca_calc = NCA_table$Score,
pvf_calc = PVF_table$Score) %>%
select(-RA2_New_Charge_While_Case_Pending, -RA2_Current_Charge_Violent) %>%
na.omit(.)
summary(PRIM_features)
test_prim = PRIM_features[1:1000, ] %>% select(person_id, seq_case_id, CaseID, is_violence_prim)
test_cnet = CNet %>% filter(person_id == 100155, seq_case_id == 45169)
age = PRIM_features %>%
filter(Age_at_PRIM_Case_Filing >= 18 & Age_at_PRIM_Case_Filing <= 70) %>%
select(Age_at_PRIM_Case_Filing)
age_count = age %>% group_by(Age_at_PRIM_Case_Filing) %>% summarise(count = n())
ggplot(data = age_count, aes(x=Age_at_PRIM_Case_Filing, y=count)) + geom_bar(stat = "identity")
all_features0 = merge(x=CNet_features, y=PRIM_features, by=c("person_id", "seq_case_id"))
a = all_features0 %>% filter(person_id == 100155, seq_case_id == 45169)
violence_check = all_features0 %>%
select(person_id, seq_case_id, ChargeEntityNumber, ChargeDate,is_violence, is_violence_prim)
mean(violence_check$is_violence)
mean(violence_check$is_violence_prim)
all_features0 = all_features0 %>% select(-is_violence) %>% rename(is_violence = is_violence_prim)
a = all_features0[all_features0$person_id == "5" & all_features0$seq_case_id == "3046161", ]
b = PRIM_features[PRIM_features$person_id == "5"& PRIM_features$seq_case_id == "3046161",]
c = CNet[CNet$person_id == "5" & CNet$seq_case_id == "3046161", ]
age_issue = all_features0 %>% select(person_id, seq_case_id, CaseID,
CNet_Case_Filing_Date, Age_at_CNet_Case_Filing,
PRIM_Case_Filing_Date,Age_at_PRIM_Case_Filing, ChargeDate)
sum(age_issue$Age_at_CNet_Case_Filing < 18 | age_issue$Age_at_CNet_Case_Filing > 70)
sum(age_issue$Age_at_PRIM_Case_Filing < 18 | age_issue$Age_at_PRIM_Case_Filing > 70)
all_features = all_features0 %>%
mutate(DOB = CNet_Case_Filing_Date - years(Age_at_CNet_Case_Filing),
age_at_charge = floor(as.numeric(as.period(interval(DOB, ChargeDate)), "years"))) %>%
filter (age_at_charge >= 18,
age_at_charge <= 70) %>%
select(-c(CNet_Case_Filing_Date,
Age_at_CNet_Case_Filing,
Age_at_PRIM_Case_Filing, DOB,
Interview_Date))
## re-order the columns
all_features = all_features[, c(1,2,31,3:6,43,34,7:30,32:33,38:39,35:37,40:42)]
a = all_features %>% filter(person_id == 100155, seq_case_id == 45169)
summary(all_features)
age_count = all_features %>% group_by(age_at_charge) %>% summarise(count = n())
ggplot(data = age_count, aes(x=age_at_charge, y=count)) + geom_bar(stat = "identity")
## cutoff date
cutoff_date = max(all_features$ChargeDate) - years(2)
## subset data
before_cutoff0 = all_features %>% filter(ChargeDate < cutoff_date)
after_cutoff0 = all_features %>% filter(ChargeDate > cutoff_date)
## screening dates
screening_dates = before_cutoff0 %>%
group_by(person_id) %>%
summarise(screening_date = max(ChargeDate))
## merge screening dates with before_cutoff data set
before_cutoff0 = merge(x=before_cutoff0, y=screening_dates, by="person_id", all.x = T) %>%
mutate(sex = ifelse(sex == "Male", 1, 0))
before_cutoff = before_cutoff0[, c(1,44,2:43)] %>%
mutate(year_charges = as.numeric(as.period(interval(ChargeDate, screening_date)), "years"),
year_cases = as.numeric(as.period(interval(PRIM_Case_Filing_Date,
screening_date)), "years"),
fta_two_year = ifelse(FTA == 1 & year_cases <= 2, 1, 0),
fta_two_year_plus = ifelse(FTA == 1 & year_cases > 2, 1, 0),
six_month = ifelse(year_charges <= 0.5, 1, 0),
one_year = ifelse(year_charges <= 1, 1, 0),
three_year = ifelse(year_charges <= 3, 1, 0),
five_year = ifelse(year_charges <= 5, 1, 0)) %>%
select(-c(FTA, year_charges, year_cases, PRIM_Case_Filing_Date))
summary(before_cutoff)
create_features = function(data){
## first layer of group: for fta & probation information, since they are based on CaseID level.
features = data %>%
group_by(person_id, screening_date, seq_case_id, CaseID, sex, race) %>%
summarise(age_at_current_charge = max(age_at_charge),
p_SentMonths = max(SentMonths),
p_charges = max(ChargeEntityNumber) - min(ChargeEntityNumber)+1,
p_violence = max(is_violence), ## CaseID level
p_felony = sum(is_felony),
p_misdemeanor = sum(is_misdemeanor),
p_property = sum(is_property),
p_murder = sum(is_murder),
p_assault = sum(is_assault),
p_sex_offense = sum(is_sex_offense),
p_weapon = sum(is_weapon),
p_felprop_viol = sum(is_fel_prop_viol),
p_felassult = sum(is_fel_assult),
p_misdeassult = sum(is_misde_assult),
p_traffic = sum(is_traffic),
p_drug = sum(is_drug),
p_dui = sum(is_dui),
p_stalking = sum(is_stalking),
p_voyeurism = sum(is_voyeurism),
p_fraud = sum(is_fraud),
p_stealing = sum(is_stealing),
p_trespass = sum(is_trespass),
ADE = max(ADE),
Treatment = max(Treatment),
p_prison = max(prison),     ## even though five charges under one case could have
p_jail30 = max(jail30),     ## three prison/jail sentence, for instance, the person
## will only have one jail/prison count for that case.
## PRIM Case Level Information
p_fta_two_year = max(fta_two_year),
p_fta_two_year_plus = max(fta_two_year_plus),
p_probation = max(probation),
p_pending_charge = max(pending_charge),
six_month = max(six_month),     ## as long as there is one charge that is
one_year = max(one_year),       ## within six month/one year/three years/five
three_year = max(three_year),   ## years, the indicator variable is one.
five_year = max(five_year),
fta_risk_score_raw = mean(fta_risk_score_raw),
nca_risk_score_raw = mean(nca_risk_score_raw),
pvf_risk_score_raw = mean(pvf_risk_score_raw),
fta_calc = mean(fta_calc),
nca_calc = mean(nca_calc),
pvf_calc = mean(pvf_calc)) %>%
## second layer group: for criminal history information, since they are based on seq_case_id level.
group_by(person_id, screening_date, seq_case_id, sex, race) %>%
summarise(p_arrest = length(CaseID),
p_SentMonths = max(p_SentMonths),
age_at_current_charge = max(age_at_current_charge),
p_charges = max(p_charges),
p_violence = sum(p_violence),
p_felony = max(p_felony),
p_misdemeanor = max(p_misdemeanor),
p_property = max(p_property),
p_murder = max(p_murder),
p_assault = max(p_assault),
p_sex_offense = max(p_sex_offense),
p_weapon = max(p_weapon),
p_felprop_viol = max(p_felprop_viol),
p_felassult = max(p_felassult),
p_misdeassult = max(p_misdeassult),
p_traffic = max(p_traffic),
p_drug = max(p_drug),
p_dui = max(p_dui),
p_stalking = max(p_stalking),
p_voyeurism = max(p_voyeurism),
p_fraud = max(p_fraud),
p_stealing = max(p_stealing),
p_trespass = max(p_trespass),
ADE = max(ADE),
Treatment = max(Treatment),
p_prison = max(p_prison),
p_jail30 = max(p_jail30),
## CourtNet Case Level Information
p_fta_two_year = sum(p_fta_two_year),
p_fta_two_year_plus = sum(p_fta_two_year_plus),
p_probation = sum(p_probation),
p_pending_charge = sum(p_pending_charge),
six_month = max(six_month),
one_year = max(one_year),
three_year = max(three_year),
five_year = max(five_year),
fta_risk_score_raw = max(fta_risk_score_raw),
nca_risk_score_raw = max(nca_risk_score_raw),
pvf_risk_score_raw = max(pvf_risk_score_raw),
fta_calc = max(fta_calc),
nca_calc = max(nca_calc),
pvf_calc = max(pvf_calc)) %>%
## third layer: individual level; sum up all the seq_case_id information related to one person.
group_by(person_id, sex, race, screening_date) %>%
summarise(age_at_current_charge = max(age_at_current_charge),
p_SentMonths = sum(p_SentMonths),
p_arrest = sum(p_arrest),
p_charges = sum(p_charges),
p_violence = sum(p_violence),
p_felony = sum(p_felony),
p_misdemeanor = sum(p_misdemeanor),
p_property = sum(p_property),
p_murder = sum(p_murder),
p_assault = sum(p_assault),
p_sex_offense = sum(p_sex_offense),
p_weapon = sum(p_weapon),
p_felprop_viol = sum(p_felprop_viol),
p_felassult = sum(p_felassult),
p_misdeassult = sum(p_misdeassult),
p_traffic = sum(p_traffic),
p_drug = sum(p_drug),
p_dui = sum(p_dui),
p_stalking = sum(p_stalking),
p_voyeurism = sum(p_voyeurism),
p_fraud = sum(p_fraud),
p_stealing = sum(p_stealing),
p_trespass = sum(p_trespass),
ADE = sum(ADE),
Treatment = sum(Treatment),
p_prison = sum(p_prison),
p_jail30 = sum(p_jail30),
p_fta_two_year = sum(p_fta_two_year),
p_fta_two_year_plus = sum(p_fta_two_year_plus),
p_pending_charge = sum(p_pending_charge),
p_probation = sum(p_probation),
six_month = max(six_month),
one_year = max(one_year),
three_year = max(three_year),
five_year = max(five_year),
fta_risk_score_raw = max(fta_risk_score_raw),
nca_risk_score_raw = max(nca_risk_score_raw),
pvf_risk_score_raw = max(pvf_risk_score_raw),
fta_calc = max(fta_calc),
nca_calc = max(nca_calc),
pvf_calc = max(pvf_calc))
return(features)
}
data_before = before_cutoff %>% filter(ChargeDate < screening_date)
features_before = create_features(data_before) %>%
select(person_id, race, sex, screening_date, six_month,
one_year, three_year, five_year, p_SentMonths)
data_on = before_cutoff %>% filter(ChargeDate == screening_date)
features_on = data_on %>%
group_by(person_id) %>%
summarise(current_violence = max(is_violence))
data_before_on = before_cutoff %>% filter(ChargeDate <= screening_date)
features_before_on = create_features(data_before_on) %>%
select(-c(six_month, one_year, three_year, five_year, p_SentMonths)) %>%
merge(x = ., y = features_before, by = "person_id", all.x = TRUE) %>%
## if all the following variables are NA, it means that those individuals do not have any
## criminal history besides the current charges.
mutate(six_month = ifelse(is.na(six_month), 0, six_month),
one_year = ifelse(is.na(one_year), 0, one_year),
three_year = ifelse(is.na(three_year), 0, three_year),
five_year = ifelse(is.na(five_year), 0, five_year),
p_SentMonths = ifelse(is.na(p_SentMonths), 0, p_SentMonths)) %>%
select(-c(sex.y, race.y, screening_date.y)) %>%
rename(sex = sex.x,
race = race.x,
screening_date = screening_date.x) %>%
merge(x=., y=features_on, by = "person_id", all.x = TRUE) %>%
filter(age_at_current_charge >= p_SentMonths/12 + 18)
features_before_on = features_before_on[,c(1:34,41:46,35:40)]
summary(features_before_on)
age_count = features_before_on %>% group_by(age_at_current_charge) %>% summarise(count = n())
ggplot(data = age_count, aes(x=age_at_current_charge, y=count)) + geom_bar(stat = "identity")
## inner join two data sets
## if there is no person_id from screening dates that have match in the after_cutoff data set, then those person_id's did not commit any crime after the cutoff_date, or the screening date.
## sentence month information on the screening date (current offense date). We need this information to determine the date that the person was released and then see if any crime has been commited two years after this date.
release_dates = data_on %>%
group_by(person_id, screening_date) %>%
summarise(current_SentMonth = max(SentMonths),
current_SuspSentMonth = max(SuspSentMonths)) %>%
mutate(SentDays = ifelse(current_SentMonth>0 & current_SuspSentMonth==0,
round(current_SentMonth*30.8333), 0),
release_date = screening_date+SentDays) %>%
select(person_id, release_date, current_SentMonth, current_SuspSentMonth)
## merge
after_cutoff = merge(x=after_cutoff0, y=release_dates, by="person_id", all.y = TRUE) %>%
filter(current_SentMonth <= 12 | (current_SentMonth > 12 & current_SuspSentMonth > 0)) %>%
select(-current_SentMonth, -current_SuspSentMonth)
## add year feature
data_after = after_cutoff[, c(1,44,2:43)] %>%
mutate(year_offenses = as.numeric(as.period(interval(release_date, ChargeDate)), "years"),
recid_two_year = ifelse(year_offenses <= 2, 1, 0),
recid_drug_two_year = ifelse(recid_two_year == 1 & is_drug == 1, 1, 0),
recid_traffic_two_year = ifelse(recid_two_year == 1 & is_traffic == 1, 1, 0),
recid_violence_two_year = ifelse(recid_two_year == 1 & is_violence == 1, 1, 0),
recid_F_two_year = ifelse(recid_two_year == 1 & is_felony == 1, 1, 0),
recid_M_two_year = ifelse(recid_two_year == 1 & is_misdemeanor == 1, 1, 0),
recid_property_two_year = ifelse(recid_two_year == 1 & is_property == 1, 1, 0),
recid_six_month = ifelse(year_offenses <= 0.5, 1, 0),
recid_drug_six_month = ifelse(recid_six_month == 1 & is_drug == 1, 1, 0),
recid_traffic_six_month = ifelse(recid_six_month == 1 & is_traffic == 1, 1, 0),
recid_violence_six_month = ifelse(recid_six_month == 1 & is_violence == 1, 1, 0),
recid_F_six_month = ifelse(recid_six_month == 1 & is_felony == 1, 1, 0),
recid_M_six_month = ifelse(recid_six_month == 1 & is_misdemeanor == 1, 1, 0),
recid_property_six_month = ifelse(recid_six_month == 1 & is_property == 1, 1, 0)) %>%
select(person_id:ChargeDate, ChargeEntityNumber, year_offenses:recid_property_six_month)
outcomes = data_after %>%
group_by(person_id) %>%
summarise(recid_two_year = max(recid_two_year),
recid_drug_two_year = max(recid_drug_two_year),
recid_traffic_two_year = max(recid_traffic_two_year),
recid_violence_two_year = max(recid_violence_two_year),
recid_F_two_year = max(recid_F_two_year),
recid_M_two_year = max(recid_M_two_year),
recid_property_two_year = max(recid_property_two_year),
recid_six_month = max(recid_six_month),
recid_drug_six_month = max(recid_drug_six_month),
recid_traffic_six_month = max(recid_traffic_six_month),
recid_violence_six_month = max(recid_violence_six_month),
recid_F_six_month = max(recid_F_six_month),
recid_M_six_month = max(recid_M_six_month),
recid_property_six_month = max(recid_property_six_month))
recid_labels = merge(x=features_before_on, y=outcomes, by = "person_id") %>%
mutate(recid_two_year = ifelse(is.na(recid_two_year), 0,  recid_two_year),
recid_drug_two_year = ifelse(is.na(recid_drug_two_year), 0,  recid_drug_two_year),
recid_traffic_two_year = ifelse(is.na(recid_traffic_two_year),
0,  recid_traffic_two_year),
recid_violence_two_year = ifelse(is.na(recid_violence_two_year),
0,  recid_violence_two_year),
recid_F_two_year = ifelse(is.na(recid_F_two_year), 0,  recid_F_two_year),
recid_M_two_year = ifelse(is.na(recid_M_two_year), 0,  recid_M_two_year),
recid_property_two_year = ifelse(is.na(recid_property_two_year),
0,  recid_property_two_year),
recid_six_month = ifelse(is.na(recid_six_month), 0,  recid_six_month),
recid_drug_six_month = ifelse(is.na(recid_drug_six_month), 0,  recid_drug_six_month),
recid_traffic_six_month = ifelse(is.na(recid_traffic_six_month),
0,  recid_traffic_six_month),
recid_violence_six_month = ifelse(is.na(recid_violence_six_month),
0,  recid_violence_six_month),
recid_F_six_month = ifelse(is.na(recid_F_six_month), 0,  recid_F_six_month),
recid_M_six_month = ifelse(is.na(recid_M_six_month), 0,  recid_M_six_month),
recid_property_six_month = ifelse(is.na(recid_property_six_month),
0,  recid_property_six_month))
recid_labels = recid_labels %>% select(-p_SentMonths)
summary(recid_labels)
mean(recid_labels$recid_two_year == 1)
mean(recid_labels$recid_six_month == 1)
age_dist = recid_labels %>%
select(age_at_current_charge, recid_two_year, recid_six_month) %>%
group_by(age_at_current_charge) %>%
summarise(recid_two_year_prob = mean(recid_two_year == 1))
ggplot(data = age_dist, aes(x=age_at_current_charge, y = recid_two_year_prob)) +
geom_bar(stat = "identity")
pop1 = recid_labels %>% filter(p_drug >= 1, ADE >= 1)
age_dist1 = pop1 %>%
select(age_at_current_charge, recid_two_year) %>%
group_by(age_at_current_charge) %>%
summarise(recid_two_year_prob = mean(recid_two_year == 1))
ggplot(data = age_dist1, aes(x=age_at_current_charge, y = recid_two_year_prob)) +
geom_bar(stat = "identity")
pop2 = recid_labels %>% filter(p_drug == 0 & ADE == 0)
age_dist2 = pop2 %>%
select(age_at_current_charge, recid_two_year, recid_six_month) %>%
group_by(age_at_current_charge) %>%
summarise(recid_two_year_prob = mean(recid_two_year == 1))
ggplot() +
geom_bar(data = age_dist2,
aes(x=age_at_current_charge, y = recid_two_year_prob),
stat = "identity")
ggplot() +
geom_bar(data = age_dist2,
aes(x=age_at_current_charge, y = recid_two_year_prob, fill="red"),
stat = "identity") +
geom_bar(data = age_dist1,
aes(x=age_at_current_charge, y = recid_two_year_prob, fill = "blue"),
stat = "identity")
save(data_before,features_before,
data_on, features_on,
data_before_on, data_after, features_before_on,
outcomes, recid_labels,
file = "kentucy_features.Rdata")
## in order to replicate the spliting process for train/test data sets, set seed = 816.
set.seed(816)
train_index = sample(1:nrow(recid_labels), 0.9*nrow(recid_labels), replace = F)
train = recid_labels[train_index,]
test = recid_labels[-train_index,]
write.csv(recid_labels, file = "../data/processed/kentucky_data.csv", row.names = F)
write.csv(train, file = "../data/processed/train.csv", row.names = F)
write.csv(test, file = "../data/processed/test.csv", row.names = F)
